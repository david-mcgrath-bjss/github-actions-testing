name: 'Bootstrap Infra required to manage env with terrafrom'

on:
  workflow_dispatch:  
    inputs:
      environment:
        description: 'The env that we will bootstrap the infra for'
        required: true
        default: 'dev'
  
env:
  CONTAINER_NAME: tfstate-${{ inputs.environment }}
  BLOB_NAME: terraform-${{ inputs.environment }}.tfstate
  WORKING_DIRECTORY: github-deployment
  LOCATION: ukwest

permissions:
  id-token: write     # ← allows GitHub to mint an OIDC token
  contents: read      # ← still needed to check out your code

jobs:      
  deploy-azure-infra-terraform:
    name: Deploy to Azure with Terraform
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    # needs: [scan-terraform-config]

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        working-directory: ${{ env.WORKING_DIRECTORY }}

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2.3.0
                
    - name: Login to Azure with Service Principal
      uses: Azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    
    - name: deploy
      uses: azure/bicep-deploy@v2
      with:
        name: deploy-terraform-state-storage
        type: deployment
        operation: create
        scope: subscription
        location: ukwest
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        template-file: ./github-deployment/bootstrap/main.bicep
        parameters: |
          {
            "subName":       "${{ inputs.environment }}",
            "principalId":   "${{ secrets.AZURE_PRINCIPAL_ID }}"
          }

          

